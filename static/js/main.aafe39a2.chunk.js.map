{"version":3,"sources":["scoreboard_components/ScoreboardElement.js","scoreboard_components/Scoreboard.js","scoreboard_components/SelectionMenu.js","App.js","index.js"],"names":["ScoreboardElement","rank","highscore","playername","score","mapsize","difficulty","capitalizeFirstLetter","string","charAt","toUpperCase","slice","Scoreboard","options","useState","highscores","setHighscores","getHighscores","axios","get","then","value","data","length","Math","min","useEffect","interval","setInterval","clearInterval","console","log","className","map","index","toLowerCase","matchesOptions","SelectionMenu","selected","setSelected","option","onClick","App","setMapsize","setDifficulty","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAEe,SAASA,EAAT,GAAiD,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UACxCC,EAA2CD,EAA3CC,WAAYC,EAA+BF,EAA/BE,MAAOC,EAAwBH,EAAxBG,QAASC,EAAeJ,EAAfI,WAEpC,OACE,+BACE,6BAAKL,IACL,6BAAKE,IACL,6BAAKC,IACL,6BAAKG,EAAsBF,KAC3B,6BAAKE,EAAsBD,QAKjC,SAASC,EAAsBC,GAC7B,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,GCbxC,SAASC,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QACnC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,SAASC,IACPC,IACGC,IAAI,oDACJC,MAAK,SAACC,GACL,IAAMC,EAAOD,EAAMC,KACbC,EAASD,EAAKC,OACpBP,EAAcM,EAAKX,MAAM,EAAGa,KAAKC,IAAIF,EAAQ,SAcnD,OAVAG,qBAAU,WACRT,IACA,IAAIU,EAAWC,YAAYX,EAAe,KAC1C,OAAO,WACLY,cAAcF,MAEf,IAEHG,QAAQC,IAAIhB,GAGV,qBAAKiB,UAAU,WAAf,SACE,kCACE,gCACE,+BACE,uCACA,wCACA,uCACA,sCACA,iDAGJ,gCACGjB,EAAWkB,KAAI,SAACZ,EAAOa,GACtB,GAgBZ,SAAwBb,EAAOR,GAC7B,IAAQR,EAAwBQ,EAAxBR,QAASC,EAAeO,EAAfP,WAEjB,OACGe,EAAMhB,SAAWA,EAAQ8B,eAA4B,QAAX9B,KAC1CgB,EAAMf,YAAcA,EAAW6B,eAA+B,OAAd7B,GArBrC8B,CAAef,EAAOR,GACxB,OACE,cAACb,EAAD,CACEC,KAAMiC,EAAQ,EACdhC,UAAWmB,EAEXW,UAAU,QADLE,EAAQ,aC5ChB,SAASG,EAAT,GAA4D,IAAnCxB,EAAkC,EAAlCA,QAASyB,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACzD,OACE,qBAAKP,UAAU,gBAAf,SACGnB,EAAQoB,KAAI,SAACO,GACZ,OACE,qBACER,UACE,cAAgBM,GAAYE,EAAS,kBAAoB,IAF7D,SAKE,wBAAQC,QAAS,kBAAMF,EAAYC,IAAnC,SAA6CA,W,MCiB1CE,MAxBf,WACE,MAA8B5B,mBAAS,QAAvC,mBAAOT,EAAP,KAAgBsC,EAAhB,KACA,EAAoC7B,mBAAS,OAA7C,mBAAOR,EAAP,KAAmBsC,EAAnB,KAEA,OACE,sBAAKZ,UAAU,sBAAf,UACE,qBAAKA,UAAU,QAAf,wCACA,0CACA,cAACK,EAAD,CACExB,QAAS,CAAC,OAAQ,QAAS,SAC3ByB,SAAUjC,EACVkC,YAAaI,IAEf,4CACA,cAACN,EAAD,CACExB,QAAS,CAAC,MAAO,OAAQ,SAAU,QACnCyB,SAAUhC,EACViC,YAAaK,IAEf,cAAChC,EAAD,CAAYoB,UAAU,SAASnB,QAAS,CAAER,UAASC,oBCpBzDuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aafe39a2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function ScoreboardElement({ rank, highscore }) {\r\n  const { playername, score, mapsize, difficulty } = highscore;\r\n\r\n  return (\r\n    <tr>\r\n      <td>{rank}</td>\r\n      <td>{playername}</td>\r\n      <td>{score}</td>\r\n      <td>{capitalizeFirstLetter(mapsize)}</td>\r\n      <td>{capitalizeFirstLetter(difficulty)}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ScoreboardElement from \"./ScoreboardElement\";\r\n\r\nexport default function Scoreboard({ options }) {\r\n  const [highscores, setHighscores] = useState([]);\r\n\r\n  function getHighscores() {\r\n    axios\r\n      .get(\"https://tyverihighscore.herokuapp.com/highscores\")\r\n      .then((value) => {\r\n        const data = value.data;\r\n        const length = data.length;\r\n        setHighscores(data.slice(0, Math.min(length, 20)));\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getHighscores();\r\n    let interval = setInterval(getHighscores, 60000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  console.log(highscores);\r\n\r\n  return (\r\n    <div className=\"itemlist\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Rank#</th>\r\n            <th>Player</th>\r\n            <th>Score</th>\r\n            <th>Size</th>\r\n            <th>Difficulty</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {highscores.map((value, index) => {\r\n            if (matchesOptions(value, options))\r\n              return (\r\n                <ScoreboardElement\r\n                  rank={index + 1}\r\n                  highscore={value}\r\n                  key={index + 1}\r\n                  className=\"item\"\r\n                />\r\n              );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction matchesOptions(value, options) {\r\n  const { mapsize, difficulty } = options;\r\n\r\n  return (\r\n    (value.mapsize == mapsize.toLowerCase() || mapsize == \"Both\") &&\r\n    (value.difficulty == difficulty.toLowerCase() || difficulty == \"Any\")\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function SelectionMenu({ options, selected, setSelected }) {\r\n  return (\r\n    <div className=\"selectionmenu\">\r\n      {options.map((option) => {\r\n        return (\r\n          <div\r\n            className={\r\n              \"menubutton\" + (selected == option ? \" selectedbutton\" : \"\")\r\n            }\r\n          >\r\n            <button onClick={() => setSelected(option)}>{option}</button>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import Scoreboard from \"./scoreboard_components/Scoreboard.js\";\r\nimport SelectionMenu from \"./scoreboard_components/SelectionMenu.js\";\r\nimport React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [mapsize, setMapsize] = useState(\"Both\");\r\n  const [difficulty, setDifficulty] = useState(\"Any\");\r\n\r\n  return (\r\n    <div className=\"scoreboardcontainer\">\r\n      <div className=\"title\">Robin The Hood Leaderboard</div>\r\n      <h1>Map Size</h1>\r\n      <SelectionMenu\r\n        options={[\"Both\", \"Small\", \"Large\"]}\r\n        selected={mapsize}\r\n        setSelected={setMapsize}\r\n      />\r\n      <h1>Difficulty</h1>\r\n      <SelectionMenu\r\n        options={[\"Any\", \"Easy\", \"Medium\", \"Hard\"]}\r\n        selected={difficulty}\r\n        setSelected={setDifficulty}\r\n      />\r\n      <Scoreboard className=\"parent\" options={{ mapsize, difficulty }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}